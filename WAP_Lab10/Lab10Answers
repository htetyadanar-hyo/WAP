Exe 1

There are 6 callbacks queues in Node.js.
They are :
1) Timer Queue
2) I/O Queue
3) Idle,prepare Queue (internally)
4) Poll Queue
5) Check Queue
6) Close Queue

1) Timer Queue
-This queue holds callbacks by setTimeout() and setInterval().
setTimeout(()=>{
    console.log("Hi");
},1000);

2) I/O Queue
-This queue holds callbacks by file system operations.
-This are executed after the timer phase.
fs.readFile('hello.txt',() => {
    console.log("I/O");
})

3)This queue ae used internally by Node.js.

4) Poll Queue
-This queue holds callbacks by I/O events.

5) Check Queue
-This queue holds callbacks by setImmediate().
- They are executed after the Poll Phase.
setImmediate(()=>{
console.log("Hello");
});

6) Close Queue
This queue contains callbacks associated with closing resources, like sockets or file descriptors.
const fs = require('fs');
const readableStream = fs.createReadStream("hello.txt");
readableStream.on("close",()=>{
    console.log("closed");
});
readableStream.close();

Exe 2

The output will be:
start
end
nextTick 1
nextTick 2
Promise...1
Promise...2
timeout 1
timeout 2
nextTick 3
timeout 3

Exe 3
The output can be different cause of polling and timers.

The output will be:
timeout
Immediate
readFile....

The output will be:
Immediate
timeout
readFile

Exe 4

In Node.js, the output is undefined.
In browser, the output is Hello World.
Because it is cause of this keyword and this keyword refers to window in browser.
There is no window in Node.js and Node.js doesn't know this keyword. Only global exits in Node.js.

Exe 5

There is an error when execute the code below. The error is we cannot call the getName as a function.
In pattern2.js file, module.exports will return object with property getName. Not function of getName.

Exe 6
The output will be:
Josh Edward

Exe 7
The output will be:
Josh Edward

Exe 8
{ firstname: 'John', lastname: 'Smith' }






